import logging
from codonOpt.global_vars import DNA_to_aa
import time, datetime



def return_window_in_frame_as_triplet_starts(dna_seq, start, end):
    start, end = return_window_in_frame(dna_seq, start, end)

    if start != 0:
        start = int(start/3)
    if end != 0:
        end = int(end/3)

    return start, end

def return_window_in_frame(dna_seq, start, end):

    logging.debug('Start: ' + str(start) + ' End: ' + str(end))
    while start % 3 != 0:
        start -= 1
    while end % 3 != 0:
        end += 1
    logging.debug('Start in frame: ' + str(start) + ' End in frame: ' + str(end))
    window = dna_seq[start:end]

    return start, end

def translate(dna_string):
    """Translate dna_seq into protein_seq

    This function will translate a DNA sequence to a protein sequence using the dna_to_aa_table
    dna_seq is converted to all uppercase.
    The length of the dna_seq is checked to be divisable by 3
    Translated seq is generated by looking up triplets from DNA_to_aa dictionary (global_var)

    Args:
        dna_seq: A dna sequence made up of A, T, G or C.

    Returns:
        translated: Returns the translated protein sequence
    """

    translated = ""
    for triplet in dna_string:
        aa = DNA_to_aa.get(triplet)
        translated += aa

    return translated

def import_protein_fasta(fasta_file, input_dir=''):
    from Bio import SeqIO

    file = input_dir + fasta_file

    # Use biopython to make a list of input protein sequences
    dict_seqs = {}
    for seq_record in SeqIO.parse(file, "fasta"):
        dict_seqs[seq_record.id] = str(seq_record.seq)

    return dict_seqs

def export_dna_dict_fasta(dict_dna_seqs, output_dir=''):
    timestamp = datetime.datetime.fromtimestamp(time.time()).strftime('%Y-%m-%d %H:%M:%S')
    protein_file_name = 'codonOpt_' + str(timestamp) + '.fasta'
    file_name_and_location = output_dir + protein_file_name
    file = open(file_name_and_location, "w")

    for id in dict_dna_seqs:
        dna_seq = dict_dna_seqs[id]
        seq_name = (">" + str(id))
        file.write(seq_name + "\n")
        file.write(dna_seq + "\n")
        file.write("\n")
