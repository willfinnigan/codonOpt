import logging, random
from codonOpt.global_vars import DNA_to_aa, amino_acids_list


def return_window_in_frame(dna_seq, start, end):

    logging.debug('Start: ' + str(start) + ' End: ' + str(end))
    while start % 3 != 0:
        start -= 1
    while end % 3 != 0:
        end += 1
    logging.debug('Start in frame: ' + str(start) + ' End in frame: ' + str(end))
    window = dna_seq[start:end]

    return start, end

def check_protein_seq(protein_seq):
    """Checks the protein sequence against a list of amino acid characters.

    Args:
        protein_seq (str): A protein sequence using the single letter amino acid code.

    Returns:
        bool: The return value. True for success,  will raise a NameError is failed.

    """

    logging.debug('Checking protein sequence is valid...')

    protein_seq = protein_seq.upper()
    for aa in protein_seq:
        if aa not in amino_acids_list:
            logging.warning('Non amino acid character found in protein sequence: ' + aa)
            raise NameError('Non amino acid character found in protein sequence')

    logging.debug('Passed')

    return True

def translate(dna_seq):
    """Translate dna_seq into protein_seq

    This function will translate a DNA sequence to a protein sequence using the dna_to_aa_table
    dna_seq is converted to all uppercase.
    The length of the dna_seq is checked to be divisable by 3
    Translated seq is generated by looking up triplets from DNA_to_aa dictionary (global_var)

    Args:
        dna_seq (str): A dna sequence made up of A, T, G or C.

    Returns:
        translated: Returns the translated protein sequence
    """

    translated = ""
    dna_seq = dna_seq.upper()
    dna_length = len(dna_seq)

    if (dna_length%3) != 0:
        raise NameError('DNA Sequence to be translated is not divisable by 3')

    for i in range(0,dna_length,3):
        triplet = dna_seq[i:i+3]
        aa = DNA_to_aa.get(triplet)
        translated += aa
    return translated

def check_dna_back_translation(dna_seq, protein_seq, log=False):
    """Check dna_seq translated = protein_seq

        Args:
            dna_seq (str): A dna sequence made up of A, T, G or C.
            protein_seq(str): A protein sequence using the single letter amino acid code.

        Returns:
            bool: Returns True is sucessfull.  Raises a NameError if not.

        """

    logging.debug('---Check translation back to protein sequence matches---')
    logging.debug('Checking...')

    dna_seq = dna_seq.upper()
    protein_seq = protein_seq.upper()

    translated = translate(dna_seq)
    if translated != protein_seq:
        logging.warning('Translation of dna seq to protein seq does not give the original protein seq')
        logging.warning('Original   : ' + str(protein_seq))
        logging.warning('Translation: ' + str(translated))

        raise NameError('Translation of dna seq to protein seq does not give the original protein seq')

    logging.debug('Passed')
    return True

